!function(t) {
    // üîê –ü–æ–ª–∏—Ñ–∏–ª–ª –¥–ª—è crypto.randomUUID (–¥–ª—è —Å—Ç–∞—Ä—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤)
    if (!t.crypto?.randomUUID) {
        t.crypto.randomUUID = function () {
            return "tk-form" + Math.floor(1e5 + 9e5 * Math.random());
        };
    }

    let e = "custom-form",
        r = "custom-form-submit",
        o = (t = {}) => {
            e = t.formClass || e;
            r = t.customSubmitClass || r;

            t_onReady(() => {
                t_onFuncLoad("t_zeroForms__onReady", () => {
                    n();
                });
            });

            // üîÑ –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –ø–æ–ø–∞–ø–∞
            document.addEventListener("tilda-popup-open", function () {
                setTimeout(() => {
                    if (window.tkForm && typeof window.tkForm.init === "function") {
                        tkForm.init({
                            formClass: e,
                            customSubmitClass: r,
                        });
                    }
                }, 100);
            });
        },
        n = () => {
            let t = document.querySelectorAll(`[class*="${e}"]`); // –ò—â–µ–º —Ñ–æ—Ä–º—ã –ø–æ —á–∞—Å—Ç–∏—á–Ω–æ–º—É —Å–æ–≤–ø–∞–¥–µ–Ω–∏—é –∫–ª–∞—Å—Å–∞
            if (0 === t.length) {
                console.error("[TKFORM] –ù–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–π —Ñ–æ—Ä–º—ã —Å –∫–ª–∞—Å—Å–æ–º", e);
                return;
            }
            let rSet = new Set();
            t.forEach(t => {
                let parent = t.closest(".t-rec");
                if (parent) rSet.add(parent);
            });

            if (rSet.size === 0) {
                console.error("[TKFORM] –ù–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ –∑–µ—Ä–æ –±–ª–æ–∫–∞ —Å —Ñ–æ—Ä–º–∞–º–∏");
                return;
            }

            i(t), s(rSet), a(t);
        },
        i = t => {
            t.forEach(t => {
                const submit = t.querySelector(".tn-form__submit");
                if (submit) submit.remove();
            });
        },
        a = t => {
            t.forEach(form => {
                Array.prototype.slice.call(form.querySelectorAll(".t-input:not(.t-inputquantity):not(.t-input-phonemask__wrap):not(.t-input-phonemask):not(.t-input__own-answer)")).forEach(function(input) {
                    input.addEventListener("blur", function(e) {
                        e.target.value ? e.target.classList.add("t-input_has-content") : e.target.classList.remove("t-input_has-content");
                    });
                });
            });
        },
        s = t => {
            t.forEach(block => {
                let artboard = block.querySelector(".t396__artboard"),
                    forms = block.querySelectorAll(`[class*="${e}"]`),
                    button = block.querySelector(`[class*="${r}"]`);

                if (!artboard) return console.error("[TKFORM] –ù–µ –Ω–∞–π–¥–µ–Ω —ç–ª–µ–º–µ–Ω—Ç t396__artboard –≤ –±–ª–æ–∫–µ:", block), !1;
                if (forms.length === 0) return console.error(`[TKFORM] –ù–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–π —Ñ–æ—Ä–º—ã —Å –∫–ª–∞—Å—Å–æ–º ${e} –≤ –±–ª–æ–∫–µ`, block), !1;
                if (!button) return console.error(`[TKFORM] –ù–µ –Ω–∞–π–¥–µ–Ω–æ –∫–Ω–æ–ø–∫–∏ submit —Å –∫–ª–∞—Å—Å–æ–º ${r} –≤ –±–ª–æ–∫–µ`, block), !1;

                let formId = artboard.dataset.artboardRecid ? "tk-form" + artboard.dataset.artboardRecid : "tk-form" + Math.floor(1e5 + 9e5 * Math.random()),
                    wrapper = document.createElement("div");

                wrapper.innerHTML = `<form class="t-form t-form_inputs-total_2 js-form-proccess" id="${formId}" name="form778879734" action="https://forms.tildacdn.com/procces/ " method="POST" role="form" data-formactiontype="2" data-inputbox=".t-input-group" data-success-callback="t396_onSuccess" data-success-popup="y" data-error-popup="y"></form>`;

                let newForm = wrapper.firstChild;

                forms.forEach(form => {
                    let container = document.createElement("div");
                    [...form.children].forEach(child => container.appendChild(child.cloneNode(true)));
                    newForm.appendChild(container);
                });

                newForm.appendChild(button);
                artboard.appendChild(newForm);

                l(newForm, button);
            });
        },
        l = (form, button) => {
            if (!form) return console.error("[TKFORM] –ù–µ –Ω–∞–π–¥–µ–Ω–æ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Ñ–æ—Ä–º—ã, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É: bystricky@tonky-kot.ru"), !1;
            if (!button) return console.error("[TKFORM] –ù–µ –Ω–∞–π–¥–µ–Ω–æ –∫–Ω–æ–ø–∫–∏ submit –≤ —Ñ–æ—Ä–º–µ"), !1;

            button.setAttribute("type", "submit");
            button.setAttribute("tabindex", "0");
            button.setAttribute("onKeyDown", "tkForm.handleSubmitKeyDown(event)");
            let style = button.getAttribute("style") || "";
            button.setAttribute("style", style + " cursor: pointer;");

            button.addEventListener("click", function handleClick(e) {
                e.preventDefault();
                e.stopPropagation();

                window.tildaForm.hideErrors(form);
                let errors = window.tildaForm.validate(form);

                if (errors.length) {
                    window.tildaForm.showErrors(form, errors);
                    return;
                }

                // ‚úÖ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —É—Å–ø–µ—Ö –¢–∏–ª—å–¥—ã
                if (typeof t396_onSuccess === 'function') {
                    const recid = form.closest('.t-rec')?.dataset['recordId'] || '';
                    t396_onSuccess({ form: form, recid: recid });
                }

                // üïí –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø–æ–ø–∞–ø —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
                setTimeout(() => {
                    const popup = document.querySelector('.t-popup_opened');
                    if (popup && typeof t_onPopupClose === 'function') {
                        t_onPopupClose(popup);
                    }
                }, 3000);
            });

            button.classList.add("t-submit");

            t_onReady(function () {
                setTimeout(function () {
                    if (window.t_upwidget__init) {
                        t_zeroForms__onFuncLoad("t_upwidget__init", () => button.classList.remove("t-submit"));
                    } else {
                        button.classList.remove("t-submit");
                    }
                }, 500);
            });
        };

    t.tkForm = {
        init: o,
        handleSubmitKeyDown: function (e) {
            (13 === e.keyCode || 32 === e.keyCode) && (e.preventDefault(), e.target.dispatchEvent(new Event("click")));
        }
    };
}(window);
